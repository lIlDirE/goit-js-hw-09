{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAASH,EAAKI,SAAS,GACvBC,EAASL,EAAKI,SAASE,OACvBC,EAAQP,EAAKI,SAASI,MACtBC,EAAOT,EAAKI,SAASM,KAC3B,IAAIC,EAIJ,SAASC,EAAcC,EAAUC,GAChC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACRH,EACFF,EAAQ,C,SAAEH,EAAUL,MAAAM,IAEpBG,EAAO,C,SAAEJ,EAAUL,MAAAM,GAAQ,GAEzBA,EAAM,G,CAXZX,EAAOmB,iBAAiB,SAexB,SAAeC,GACdA,EAAIC,iBACJb,GAAaN,EAAOoB,MACjB,IAAK,IAAIC,EAAW,EAAGA,GAAYrB,EAAOoB,MAAOC,GAAY,EAC/Dd,EAAcc,EAAUnB,EAAMkB,OAC3BE,MAAK,EAACd,SAAEA,EAAUL,MAAAoB,MACpBC,QAAQC,IAAI,uBAAqBjB,QAAiBe,MAAU,IAE1DG,OAAM,EAAClB,SAAEA,EAAUL,MAAAwB,MACrBH,QAAQC,IAAI,sBAAoBjB,QAAiBmB,MAAU,IAE1DrB,GAAaF,EAAKgB,QAASlB,EAAMkB,K","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(\".form\");\nconst button = form.elements[3];\nconst amount = form.elements.amount;\nconst delay = form.elements.delay;\nconst step = form.elements.step;\nlet countTmp;\n\nbutton.addEventListener('click', onBtn);\n\nfunction createPromise(position, delay) {\n\treturn new Promise((resolve, reject) => {\n\t  const shouldResolve = Math.random() > 0.3;\n\t  setTimeout(() => {\n\t\tif (shouldResolve) {\n\t\t  resolve({ position, delay });\n\t\t} else {\n\t\t  reject({ position, delay });\n\t\t}\n\t  }, delay);\n\t});\n  }\n  \nfunction onBtn(evt) {\n\tevt.preventDefault();\n\tcountTmp = (+amount.value);\n   \tfor (let position = 1; position <= amount.value; position += 1) {\n\t createPromise(position, delay.value)\n\t   .then(({ position, delay }) => {\n\t\t\tconsole.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\t   })\n\t   .catch(({ position, delay }) => {\n\t\t\tconsole.log(`❌ Rejected promise ${position} in ${delay}ms`);\n\t   })\n\t   countTmp = (+step.value +(+delay.value));\n   }\n }\n\n// // Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз, сколько ввели в поле amount. \n// // При каждом вызове передай ей номер создаваемого промиса (position) и задержку учитывая введенную пользователем первую задержку (delay) и шаг (step)."],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$button","elements","$47d4ff9957288465$var$amount","amount","$47d4ff9957288465$var$delay","delay","$47d4ff9957288465$var$step","step","$47d4ff9957288465$var$countTmp","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","value","position1","then","delay2","console","log","catch","delay3"],"version":3,"file":"03-promises.6d64fb9e.js.map"}